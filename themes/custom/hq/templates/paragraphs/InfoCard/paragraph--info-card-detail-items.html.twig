{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% set title = paragraph.field_title.value %}

{% set field_title = title|replace({' ': '_', '|': '', '~': ''})|preg_replace('/[^a-zA-Z0-9]/', '')|lower %}


{% if paragraph.field_colour.target_id %}
  {% set color_term = paragraph.field_colour.entity %}
  {% set hexcode = color_term.field_hex_colour.value %}
{% endif %}

{% block content %}
  <div class="info-card--details col-12 col-lg-3 tab-pane fade" role="tabpanel" aria-labelledby="info-card-{{field_title}}">
    <div class="info-card--header" role="tab" id="info-card-heading-{{field_title}}">
      <a data-toggle="collapse" href="#info-card-{{field_title}}" data-parent="#info-card__tab-content" aria-expanded="false" aria-controls="info-card-{{field_title}}">
        {% if content.field_icon_card.0 %}
          <div class="info-card--icon__wrapper" style="background-color: {{ hexcode }};">
            <div class="info-card--icon__img">{{ content.field_icon_card }}</div>
          </div>
        {% endif %}
        <div class="info-card--title__wrapper">
          <div class="info-card--title">
            {{ content.field_title }}
          </div>
          <i class="icon-arrow-left"></i>
        </div>
      </a>
    </div>
    <div class="info-card--body collapse" id="info-card-{{field_title}}" role="tabpanel" aria-labelledby="info-card-heading-{{field_title}}" data-parent="#info-card__tab-content">
      <div class="info-card--body__wrapper">
        <div class="info-card--description">{{ content.field_body }}</div>
        <div class="info-card--button">{{ content.field_linked }}</div>
      </div>
    </div>
  </div>
{% endblock %}
