{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% if content.field_background_colour|render|length %}
  {% set bg_color = content.field_background_colour['#items'].entity.field_hex_colour.value %}
{% else %}
  {% set bg_color = '#ffffff' %}
{% endif %}

{% if content.field_colour|render|length %}
  {% set hover_color = content.field_colour['#items'].entity.field_hex_colour.value %}
{% else %}
  {% set hover_color = '#E5E5E5' %}
{% endif %}

{% if content.field_text_color|render|length %}
  {% set text_color = content.field_text_color['#items'].entity.field_hex_colour.value %}
{% else %}
  {% set text_color = '#202056' %}
{% endif %}

{% if content.field_hover_text_color|render|length %}
  {% set text_hover_color = content.field_hover_text_color['#items'].entity.field_hex_colour.value %}
{% else %}
  {% set text_hover_color = '#000000' %}
{% endif %}

{% if content.field_svg_icon_colour|render|length %}
  {% set svg_color = content.field_svg_icon_colour['#items'].entity.field_hex_colour.value %}
{% else %}
  {% set svg_color = '#202056' %}
{% endif %}

<div class="{{ bg_type }}" style="background-color: {{bg_color}};">
  {% block paragraph %}
    <div{{ attributes.addClass(classes) }}>
      {% block content %}
      <div class="wrapp-profile-cards" style="color: {{text_color}};" onmouseover="this.style.color='{{text_hover_color}}';" onmouseout="this.style.color='{{text_color}}';">
        <div class="content">
          <div class="content-overlay" style="background-color: {{hover_color}};"></div>
            <div class="content-mouve">
              <div style="color: {{svg_color}};">
                {% if content.field_svg_icon.0 is empty %}
                  {{ content.field_icon_card }}
                {% else %}
                  {{ content.field_svg_icon }}
                {% endif %}
              </div>
              {{ content.field_startegic_text }}
              {{ content.field_body }} 
            </div>
          <div class="content-details fadeIn-bottom">
            {{ content.field_link_limited }}  
          </div>
        </div>
      </div>
      {% endblock %}
    </div>
  {% endblock paragraph %}
</div>
