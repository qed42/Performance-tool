{"version":3,"names":[],"mappings":"","sources":["components/block.related-resources.explore-issues.js"],"sourcesContent":["(function ($, Drupal, once) {\n  Drupal.behaviors.relatedResourcesSlider = {\n    attach: function (context, settings) {\n      const containers = once('relatedResourcesSlider', '.block-views-block-related-resources-explore-issues .swiper-container', context);\n\n      containers.forEach((container, index) => {\n        const wrapper = container.querySelector('.swiper-wrapper');\n        if (!wrapper) return;\n\n        const uniqueClass = 'related-instance-' + index;\n        container.classList.add(uniqueClass);\n\n        const blockWrapper = container.closest('.block-views-block-related-resources-explore-issues');\n\n        new Swiper('.' + uniqueClass, {\n          slidesPerView: 3.25,\n          spaceBetween: 32,\n          loop: false,\n          grabCursor: true,\n          centeredSlides: false,\n          navigation: {\n            nextEl: blockWrapper ? blockWrapper.querySelector('.swiper-button-next') : null,\n            prevEl: blockWrapper ? blockWrapper.querySelector('.swiper-button-prev') : null,\n          },\n          breakpoints: {\n            10: { slidesPerView: 1.15 },\n            576: { slidesPerView: 1.33 },\n            768: { slidesPerView: 2.33 },\n            1024: { slidesPerView: 3.25 },\n          }\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.mobileFilterToggle = {\n    attach: function (context) {\n      const fieldsets = once('mobileFilterToggle', '#block-views-block-related-resources-explore-issues .form-composite', context);\n\n      fieldsets.forEach(fieldset => {\n        const legend = fieldset.querySelector('legend');\n        if (!legend) return;\n\n        legend.addEventListener('click', () => {\n          fieldset.classList.toggle('open');\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.preserveFilterScroll = {\n    attach: function (context) {\n      const $filterBox = $('.form-checkboxes.bef-checkboxes', context);\n      if (!$filterBox.length) return;\n\n      once('preserveScrollSave', '.form-checkboxes.bef-checkboxes input[type=\"checkbox\"]', context).forEach(el => {\n        $(el).on('mousedown touchstart', function () {\n          const scrollTop = $filterBox.scrollTop();\n          sessionStorage.setItem('filterScrollTop', scrollTop);\n        });\n      });\n\n      $(document).off('ajaxComplete.preserveScroll').on('ajaxComplete.preserveScroll', function () {\n        const scrollTop = sessionStorage.getItem('filterScrollTop');\n        if (scrollTop !== null) {\n          $('.form-checkboxes.bef-checkboxes').scrollTop(scrollTop);\n        }\n      });\n    }\n  };\n})(jQuery, Drupal, once);\n"],"file":"../../components/block.related-resources.explore-issues.js"}