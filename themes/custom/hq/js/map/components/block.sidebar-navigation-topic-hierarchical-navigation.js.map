{"version":3,"names":[],"mappings":"","sources":["components/block.sidebar-navigation-topic-hierarchical-navigation.js"],"sourcesContent":["(function ($, Drupal) {\n  Drupal.behaviors.topicMenuToggle = {\n    attach: function (context, settings) {\n      // Toggle button\n      once('toggleBound', '.toggle', context).forEach(function (btn) {\n        const $btn = $(btn);\n\n        const toggleExpand = function () {\n          const $currentLi = $btn.closest('li.topic-item');\n\n          // Collapse all other open trees at the same level\n          const $allSiblings = $currentLi.siblings('.is-open');\n          $allSiblings.removeClass('is-open')\n            .find('.toggle')\n            .attr('aria-expanded', 'false')\n            .text('+');\n\n          // Toggle current\n          const isOpen = $currentLi.hasClass('is-open');\n          $currentLi.toggleClass('is-open', !isOpen);\n          $btn.attr('aria-expanded', String(!isOpen));\n          $btn.text(!isOpen ? '−' : '+');\n        };\n\n        $btn.on('click', toggleExpand);\n\n        $btn.on('keydown', function (e) {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            toggleExpand();\n          }\n        });\n      });\n\n      // See more / See less\n      once('moreBound', '.see-more-button', context).forEach(function (btn) {\n        const $btn = $(btn);\n        const $wrapper = $(context).find('.topic-hidden-wrapper');\n        const $lessBtn = $(context).find('.see-less-button');\n\n        $btn.on('click', function () {\n          $wrapper.removeClass('hidden');\n          $btn.addClass('hidden');\n          $lessBtn.removeClass('hidden');\n        });\n      });\n\n      once('lessBound', '.see-less-button', context).forEach(function (btn) {\n        const $btn = $(btn);\n        const $wrapper = $(context).find('.topic-hidden-wrapper');\n        const $moreBtn = $(context).find('.see-more-button');\n\n        $btn.on('click', function () {\n          $wrapper.addClass('hidden');\n          $moreBtn.removeClass('hidden');\n          $btn.addClass('hidden');\n          $moreBtn[0].scrollIntoView({ behavior: 'smooth', block: 'center' });\n        });\n      });\n\n      // Mobile menu toggle\n      once('mobileToggleBound', '.mobile-menu-toggle', context).forEach(function (btn) {\n        const $btn = $(btn);\n        const $menu = $(context).find('.topic-menu-content');\n        const $heading = $btn.closest('.topic-navigation-heading'); // ✅ Get heading wrapper\n\n        $btn.on('click', function () {\n          const expanded = $btn.attr('aria-expanded') === 'true';\n          $btn.attr('aria-expanded', String(!expanded));\n          $menu.toggleClass('open');\n\n          // ✅ Toggle class on heading\n          if (!expanded) {\n            $heading.addClass('menu-open');\n          } else {\n            $heading.removeClass('menu-open');\n          }\n        });\n\n        $btn.on('keydown', function (e) {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            $btn.click();\n          }\n        });\n      });\n\n      let lastScrollY = window.scrollY;\n      let scrollDirection = 'down';\n\n      window.addEventListener('scroll', function () {\n        const currentScroll = window.scrollY;\n        scrollDirection = currentScroll > lastScrollY ? 'down' : 'up';\n        lastScrollY = currentScroll;\n      });\n\n      const targetBlock = document.querySelector('.block-views-block-related-resources-explore-issues');\n      const topicNav = document.querySelector('.topic-navigation');\n\n      if (targetBlock && topicNav) {\n        const observer = new IntersectionObserver(function (entries) {\n          entries.forEach(function (entry) {\n            // Only apply relative if scrolling down AND block is entering\n            if (entry.isIntersecting && scrollDirection === 'down') {\n              topicNav.classList.add('in-viewport');\n              topicNav.classList.remove('is-sticky');\n            }\n          \n            // When scrolling up and block is out of view, remove the class\n            if (!entry.isIntersecting && scrollDirection === 'up') {\n              topicNav.classList.remove('in-viewport');\n              topicNav.classList.add('is-sticky');\n            }\n          });\n        }, {\n          threshold: 0.1,\n        });\n      \n        observer.observe(targetBlock);\n      }\n    }\n  };\n})(jQuery, Drupal);\n"],"file":"../../components/block.sidebar-navigation-topic-hierarchical-navigation.js"}